Python Sending Email using SMTP

Sending Mail Transfer Protocol (SMTP) is used as a protocol to handle the email transfer using python. It is used to route emails between email servers.

Python provides smtplib module, which defines an SMTP client session object used for the purpose of sending emails to an internet machine. For this purpose, we have to import the smtplib module using the import statement.

    $ import smtplib  

The SMTP object is used for the email transfer. The following syntax is used to create the smtplib object.

    import smtplib   
    smtpObj = smtplib.SMTP(host, port, local_hostname)    

It accepts the following parameters.

    host: It is the hostname of the machine which is running your SMTP server. Here, we can specify the IP address of the server like (https://www.javatpoint.com) or localhost. It is an optional parameter.
    port: It is the port number on which the host machine is listening to the SMTP connections. It is 25 by default.
    local_hostname: If the SMTP server is running on your local machine, we can mention the hostname of the local machine.

The sendmail() method of SMTP object is used to send the mail to the desired machine. The syntax is given below.

    smtpObj.sendmail(sender, receiver, message)  

Example

    #!/usr/bin/python3  
    import smtplib  
    sender_mail = sender@fromdomain.com  
    receivers_mail = [reciever@todomain.com]  
    message = """From: From Person %s 
    To: To Person %s 
    Subject: Sending SMTP e-mail  
    This is a test e-mail message. 
    """%(sender_mail,receivers_mail)  
    try:  
       smtpObj = smtplib.SMTP('localhost')  
       smtpObj.sendmail(sender_mail, receivers_mail, message)  
       print("Successfully sent email")  
    except Exception:  
       print("Error: unable to send email")  

Sending email from gmail

There are the cases where the emails are sent using gmail SMTP server. In this case, we can pass gmail as the SMTP server instead of using localhost with the port 587.

Use the following syntax.

    $ smtpObj = smtplib.SMTP("gmail.com", 587)   

Here, we need to login to the gmail account using gmail user name and password. For this purpose, the smtplib provide the login() method which accepts the username and password of the sender.

Consider the following example.
Example

    #!/usr/bin/python3  
    import smtplib  
    sender_mail = sender@gmail.com  
    receivers_mail = [reciever@gmail.com]  
    message = """From: From Person %s 
    To: To Person %s 
    Subject: Sending SMTP e-mail  
    This is a test e-mail message. 
    """%(sender_mail,receivers_mail)  
    try:  
       password = input('Enter the password');  
       smtpObj = smtplib.SMTP('gmail.com',587)  
       smtpobj.login(sender_mail,password)  
       smtpObj.sendmail(sender_mail, receivers_mail, message)  
       print("Successfully sent email")  
    except Exception:  
       print("Error: unable to send email")  

Sending HTML in email

We can format the HTML in the message by specifying the MIME version, content-type, and character set to send the HTML.

Consider the following example.
Example

    #!/usr/bin/python3  
    import smtplib  
    sender_mail = sender@fromdomain.com  
    receivers_mail = [reciever@todomain.com]  
    message = """From: From Person %s 
    To: To Person %s 
     
    MIME-Version:1.0 
    Content-type:text/html 
     
     
    Subject: Sending SMTP e-mail  
     
    <h3>Python SMTP</h3> 
    <strong>This is a test e-mail message.</strong> 
    """%(sender_mail,receivers_mail)  
    try:  
       smtpObj = smtplib.SMTP('localhost')  
       smtpObj.sendmail(sender_mail, receivers_mail, message)  
       print("Successfully sent email")  
    except Exception:  
       print("Error: unable to send email")

davida@yahoo.com, davida-100@yahoo.com, davida.100@yahoo.com, davida111@davida.com, davida-100@davida.net, davida.100@davida.com.au, davida@1.com, davida@gmail.com.com, davida+100@gmail.com, davida-100@yahoo-test.com  valid special char ~@davidalberto.com hey@ucl.ac.uk, "this..one"@gmail.com, h.e.y@gmail.com, 

the "." at the start should be ignored .davida@davida.com,
suffix should be ignored davida@gmail.com.1a
prefix should be ignored davida@davida@gmail.com,

INVALID EMAILS:

davida, davida@.com.my, davida123.@gmail.a, davida123@gmail.a, davida123@.com, davida123@.com.com, davida()*@gmail.com, davida@%*.com, davida.@gmail.com,  
tld is too long davida@gmail.comnnnnnnnn 

INVALID EMAILS - TODO:

adjacent "." should not be valid davida..2002@gmail.com
some images a@bg.png  1x@cover.gif

HIDDEN EMAILS:

somethingatgmail.com 
something at gmail.com  something AT gmail.com 
asdf ( at ) gmail.com yoooo (at) gmail.com

HIDDEN EMAILS - TODO:

this at that dot com
this [at] that [dot] com


-----
  